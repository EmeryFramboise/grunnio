/* =========== Mixins */

@mixin animation ($name: true, $duration: true, $timing_function: true, $delay: false, $iteration_count: false, $direction: false) {
    @if $name { -webkit-animation-name: $name; -moz-animation-name: $name; -ms-animation-name: $name; }
    @if $duration { -webkit-animation-duration: $duration; -moz-animation-duration: $duration; -ms-animation-duration: $duration; }
    @if $timing_function { -webkit-animation-timing-function: $timing_function; -moz-animation-timing-function: $timing_function;  -ms-animation-timing-function: $timing_function; }
    @if $delay { -webkit-animation-delay: $delay; -moz-animation-delay: $delay; -ms-animation-delay: $delay; }
    @if $iteration_count { -webkit-animation-iteration-count: $iteration_count; -moz-animation-iteration-count: $iteration_count; -ms-animation-iteration-count: $iteration_count; }
    @if $direction { -webkit-animation-direction: $direction; -moz-animation-direction: $direction; -ms-animation-direction: $direction; }
}

@mixin background-clip($clip) {
    -webkit-background-clip: $clip;
    -moz-background-clip: $clip;
    -o-background-clip: $clip;
    background-clip: $clip;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}

@mixin box-shadow($shadow) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -o-box-shadow: $shadow;
    box-shadow: $shadow;
}

@mixin filter($filter) {
    -webkit-filter: $filter;
    -moz-filter: $filter;
    -o-filter: $filter;
    filter: $filter;
}

@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin columns($count, $gap) {
    -webkit-column-count: $count;
    -webkit-column-gap : $gap;
    -moz-column-count: $count;
    -moz-column-gap: $gap;
    -o-column-count: $count;
    -o-column-gap: $gap;
    column-count: $count;
    column-gap: $gap;
}

@mixin columns-rule($size, $style, $color) {
    -webkit-column-rule-width: $size;
    -webkit-column-rule-style: $style;
    -webkit-column-rule-color: $color;
    -moz-column-rule-width: $size;
    -moz-column-rule-style: $style;
    -moz-column-rule-color: $color;
    -o-column-rule-width: $size;
    -o-column-rule-style: $style;
    -o-column-rule-color: $color;
    column-rule-width: $size;
    column-rule-style: $style;
    column-rule-color: $color;
}

@mixin displayfix {
    *zoom: 1;
    *display: inline;
}

@mixin gradient($side, $start, $end) {
    background-color: $end;
    background-image: -webkit-linear-gradient($side, $start, $end);
    background-image: -moz-linear-gradient($side, $start, $end);
    background-image: -ms-linear-gradient($side, $start, $end);
    background-image: -o-linear-gradient($side, $start, $end);
    background-image: linear-gradient($side, $start, $end);
}

@mixin gradient-ie($start, $end) {
    *zoom: 1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}');
    -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}');
}

@mixin font-face($font-family, $file-path, $weight: normal, $style: normal ) {
  @font-face {
      font-family: $font-family;
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
           url('#{$file-path}.woff') format('woff'),
           url('#{$file-path}.ttf') format('truetype'),
           url('#{$file-path}.svg##{$font-family}') format('svg');
      font-weight: $weight;
      font-style: $style;
  }
}

@mixin letterpress($color) {
  text-shadow: 0 -1px 0 darken($color, 15%), 0 1px 0 lighten($color, 15%)
}

@mixin inset($color, $padding) {
      color: $medium-grey;
      padding: $padding;
      position: relative;
      &:after, &:before {
        content: attr(title);
        padding: $padding;
        color: rgba(255,255,255,.1);
        position: absolute;
      }
      &:after {
        top: 1px;
        left: 1px;
      }
      &:before {
        top: 2px;
        left: 2px;
      }
    }

@mixin placeholder($color) {
  input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
    color: $color;
  }
  input:-moz-placeholder, textarea:-moz-placeholder {
    color: $color;
  }
  input:-ms-input-placeholder, textarea:-ms-input-placeholder {
    color: $color;
  }
}
